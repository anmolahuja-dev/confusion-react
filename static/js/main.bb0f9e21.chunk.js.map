{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/MenuComponent.js","components/HomeComponent.js","components/HeaderComponent.js","components/DishdetailComponent.js","components/ContactComponent.js","components/FooterComponent.js","components/AboutComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/leaders.js","redux/promotions.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderMenuItem","dish","onClick","to","id","width","src","image","alt","name","Menu","props","menu","dishes","map","key","isLoading","errMess","active","RenderCard","item","in","transformProps","exitTransform","designation","description","Home","dishesLoading","dishesErrMess","promotion","promosLoading","promosErrMess","leader","leadersLoading","leadersErrMess","Header","state","isNavOpen","isModalOpen","toggleNav","bind","toggleModal","handleLogin","this","setState","event","alert","username","value","password","remember","checked","preventDefault","dark","expand","href","height","isOpen","navbar","outline","toggle","onSubmit","htmlFor","type","innnerRef","input","check","color","Component","required","val","length","maxLengh","len","RenderDish","RenderComments","comments","commentList","addComment","dishId","comment","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","CommentForm","handleSubmit","values","rating","md","text","model","placeholder","validators","minLengh","show","messages","textarea","rows","size","DishDetail","isNumber","isNaN","Number","validEmail","test","Contact","postFeedback","resetFeedbackForm","role","offset","checkbox","select","Footer","RenderLeader","tag","left","middle","object","body","heading","About","leaders","title","list","payload","dishesFailed","errmess","addDishes","commentsFailed","addComments","promosFailed","addPromos","promos","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","TransitionGroup","CSSTransition","location","classNames","timeout","path","component","filter","featured","promotions","promo","exact","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","newComment","toISOString","fetch","method","JSON","stringify","headers","credentials","then","response","ok","error","Error","status","statusText","message","json","catch","console","log","postComment","feedback","newFeedback","Object","assign","errorMessage","actions","reset","Dishes","action","Comments","concat","Leaders","Promotions","InitialFeedback","firstname","lastname","telnum","email","agree","contactType","store","createStore","combineReducers","createForms","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bb0f9e21.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw \">\r\n            </span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    )\r\n}","export const baseUrl = 'http://localhost:3001/';","import React from 'react';\r\nimport {Card, CardImg , CardImgOverlay, CardTitle, Breadcrumb,BreadcrumbItem} from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport {Loading} from './LoadingComponent';\r\nimport {baseUrl} from '../shared/baseUrl';\r\n\r\n    function RenderMenuItem ({dish, onClick}){\r\n        return (\r\n        <Card >\r\n            <Link to={`/menu/${dish.id}`}>\r\n            <CardImg width=\"100%\" src= {baseUrl+ dish.image} alt={dish.name} />\r\n                <CardImgOverlay className=\"ml-5 card-img-overlay\">\r\n                    <CardTitle> {dish.name}</CardTitle>\r\n                 </CardImgOverlay>\r\n            </Link>     \r\n        </Card>\r\n    );\r\n    }\r\n\r\n    const Menu = (props)=> {\r\n        const menu = props.dishes.dishes.map( (dish) => {\r\n            return (\r\n                <div key={dish.id} className=\"col-12 col-md-5 m-1\">\r\n                    <RenderMenuItem dish={dish} />\r\n                </div>\r\n            );\r\n        });\r\n\r\n        if(props.dishes.isLoading){\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if(props.dishes.errMess){\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <h4>{props.dishes.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem>\r\n                                <Link to='/home'>Home</Link>\r\n                            </BreadcrumbItem>\r\n                            <BreadcrumbItem active>\r\n                                    Menu\r\n                            </BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <div className=\"col-12\">\r\n                            <h3>Menu</h3>\r\n                            <hr></hr>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        {menu}\r\n                    </div>\r\n                \r\n                </div>\r\n            );\r\n    }\r\n   \r\n        \r\n    \r\n\r\n\r\nexport default Menu;","import React from 'react';\r\nimport {Card , CardImg, CardText, CardBody, CardTitle,CardSubtitle} from 'reactstrap';\r\nimport {Loading} from './LoadingComponent';\r\nimport {baseUrl} from '../shared/baseUrl';\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\nfunction RenderCard({item, isLoading, errMess}){\r\n    if(isLoading){\r\n        return (\r\n            <Loading /> \r\n        );\r\n    }\r\n    else if(errMess){\r\n        return (\r\n            <h4>{errMess}</h4>\r\n        );\r\n    }\r\n    else\r\n        return(\r\n            <FadeTransform in \r\n            transformProps={{\r\n                exitTransform: 'scale(0.5) translateY(-50%)'\r\n            }}>\r\n                <Card>\r\n                    <CardImg src ={baseUrl + item.image} alt={item.name}></CardImg>\r\n                    <CardBody>\r\n                        <CardTitle>{item.name}</CardTitle>\r\n                            {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null}\r\n                        <CardText>{item.description}</CardText>    \r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n        );\r\n}\r\n\r\nfunction Home(props){\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-start\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.dish} \r\n                        isLoading= {props.dishesLoading} \r\n                        errMess={props.dishesErrMess}\r\n                    ></RenderCard>\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.promotion}\r\n                    isLoading= {props.promosLoading} \r\n                    errMess={props.promosErrMess}></RenderCard>\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.leader}\r\n                    isLoading= {props.leadersLoading} \r\n                    errMess={props.leadersErrMess}></RenderCard>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React , {Component} from 'react';\r\nimport { Navbar, NavbarBrand ,Nav,NavbarToggler,Collapse,NavItem, Jumbotron,\r\n     Modal,ModalBody,Button,ModalHeader, FormGroup\r\n    ,Form ,Input,Label} from 'reactstrap';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        \r\n        this.state ={\r\n            isNavOpen:false,\r\n            isModalOpen: false\r\n\r\n        };\r\n\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n        \r\n    }\r\n\r\n    toggleNav(){\r\n        this.setState({\r\n            isNavOpen: !this.state.isNavOpen\r\n            \r\n        });\r\n    }\r\n\r\n    toggleModal(){\r\n        this.setState({\r\n            isModalOpen : !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n\r\n\r\n    handleLogin(event) {\r\n        this.toggleModal();\r\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\r\n            + \" Remember: \" + this.remember.checked);\r\n        event.preventDefault();\r\n\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n                        <NavbarBrand href=\"/\" className=\"mr-auto \">\r\n                            <img src=\"assets/images/logo.png\" height=\"30\" width=\"41\" alt=\"Logo\"/>\r\n                        </NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/home\">\r\n                                        <span className=\"fa fa-home fa-lg\"> Home</span>\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/aboutus\">\r\n                                        <span className=\"fa fa-info fa-lg\"> About us</span>\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/menu\">\r\n                                        <span className=\"fa fa-list fa-lg\"> Menu</span>\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/contactus\">\r\n                                        <span className=\"fa fa-address-card fa-lg\"> Contact Us</span>\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <Button outline onClick={this.toggleModal}>\r\n                                        <span className=\"fa fa-sign-in fa-lg\">Login</span>\r\n                                    </Button>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>    \r\n                    </div>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                <div className=\"container\">\r\n                    <div className=\"row row-header\">\r\n                        <div className=\"col-12 col-sm-6\">\r\n                            <h1>Ristorante Con Fusion</h1>\r\n                            <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                </Jumbotron>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader isOpen={this.state.isModalOpen} toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\" \r\n                                innnerRef={(input) => this.username = input} />    \r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                innnerRef={(input) => this.password = input} />    \r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check >\r\n                                <Input type=\"checkbox\" id=\"remember\" name=\"remember\"\r\n                                innnerRef={(input) => this.remember = input} />    \r\n                                Remember Me \r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>    \r\n                        </Form>   \r\n                    </ModalBody>    \r\n                </Modal> \r\n            </>\r\n        );\r\n    }\r\n\r\n    \r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport {Card, CardImg , CardText, CardBody, CardTitle, BreadcrumbItem ,\r\n        Input,Breadcrumb,Button,Modal,ModalHeader, ModalBody,Row,Col, Label} from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport {Control, LocalForm, Errors} from 'react-redux-form';\r\nimport {Loading} from './LoadingComponent';\r\nimport {baseUrl} from '../shared/baseUrl';\r\nimport {FadeTransform, Fade, Stagger} from 'react-animation-components';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLengh = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLengh = (len) => (val) => val && (val.length >= len);\r\n\r\n\r\n    function RenderDish(props){\r\n            return(\r\n                <div> \r\n                    <FadeTransform in \r\n                        transformProps={{\r\n                            exitTransform: 'scale(0.5) translateY(-50%)'\r\n                        }}>\r\n                    <Card>\r\n                        <CardImg width=\"100%\" src= {baseUrl+props.dish.image} alt={props.dish.name} />\r\n                        <CardBody>\r\n                        <CardTitle> {props.dish.name}</CardTitle>\r\n                        <CardText>{props.dish.description}</CardText>\r\n                        </CardBody>\r\n                    </Card>\r\n                    </FadeTransform>\r\n                </div>    \r\n            );\r\n    \r\n        }\r\n\r\n    function RenderComments ({comments,addComment,dishId}){\r\n        var commentList = comments.map((comment)=>{\r\n            return(\r\n                <div>\r\n                        <li key= {comment.id}>\r\n                            {comment.comment}\r\n                        </li>\r\n                        <br/>\r\n                        -- {comment.author}, {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}\r\n                        <br/><br/>\r\n                </div>\r\n            );\r\n        })\r\n\r\n        return(\r\n            <div>\r\n                <h4>Comments</h4>\r\n                <ul className=\"list-unstyled\">\r\n                    <Stagger in>\r\n                        <Fade in>\r\n                            {commentList}\r\n                        </Fade>    \r\n                    </Stagger>\r\n                </ul>   \r\n                    \r\n            </div>\r\n        );\r\n    }\r\n    \r\n    class CommentForm extends Component {\r\n        constructor(props){\r\n            super(props);\r\n\r\n            this.state ={\r\n                isModalOpen : false\r\n            };\r\n\r\n            this.toggleModal = this.toggleModal.bind(this);\r\n            this.handleSubmit = this.handleSubmit.bind(this);\r\n        }\r\n        \r\n        handleSubmit (values){\r\n            this.toggleModal();\r\n            this.props.addComment(this.props.dishId, values.rating, values.author,values.comment)\r\n        }\r\n\r\n        toggleModal(){\r\n            this.setState({\r\n            isModalOpen : !this.state.isModalOpen\r\n        });\r\n        }\r\n\r\n        render(){\r\n            return(\r\n                <div>\r\n                    <Button className=\"btn btn-outline-dark\"\r\n                        onClick= {this.toggleModal}>\r\n                        <i className=\"fa fa-pencil fa-lg\"></i>\r\n                         Submit comment\r\n                    </Button>\r\n\r\n                    <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                        <ModalHeader isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                        Submit Comment\r\n                        </ModalHeader>\r\n                        <ModalBody>\r\n                            <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                                <Row className=\"form-group\" >\r\n                                <Col md={10}>    \r\n                                    <Label htmlFor=\"rating\" >Rating</Label></Col>    \r\n                                <Col md={12}>\r\n                                    <Input type=\"select\"  id=\"rating\"\r\n                                     name=\"rating\"\r\n                                     className=\"form-control\">\r\n                                    <option>1</option>\r\n                                    <option>2</option>\r\n                                    <option>3</option>\r\n                                    <option>4</option>\r\n                                    <option>5</option>\r\n                                    </Input>\r\n                                </Col>\r\n                                </Row>\r\n\r\n                                <Row className=\"form-group\">\r\n                                    <Label htmlFor=\"author\" md={12}>Your name</Label>\r\n                                    <Col md={12}>\r\n                                        <Control.text model=\".author\"\r\n                                        id=\"author\" name=\"author\"\r\n                                        placeholder= \"Your Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required,minLengh : minLengh(3),maxLengh: maxLengh(15)\r\n                                        }}\r\n                                        />\r\n                                        <Errors className=\"text-danger\"\r\n                                        model=\".author\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLengh: 'Must be greater than 2 characters',\r\n                                            maxLengh: 'Must be 15 characters or less'\r\n                                        }} />\r\n\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                <Row className=\"form-group\">\r\n                                    <Label htmlFor=\"comment\" md={12}>Your Feedback</Label>\r\n                                    <Col md={12}>\r\n                                        <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\r\n                                            rows=\"6\"\r\n                                            className=\"form-control\" />\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                <Row className=\"form-group\">\r\n                                    <Col md={{size:10}}>\r\n                                        <Button type=\"submit\" color=\"primary\">\r\n                                            Submit\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>    \r\n                            </LocalForm>\r\n                        </ModalBody>\r\n                    </Modal>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    const DishDetail = (props) => {\r\n        if(props.isLoading){\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if(props.errMess){\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <h4>{props.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        \r\n        else if(props.dish!= null){\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem>\r\n                            <Link to='/menu'>Menu</Link>\r\n                        </BreadcrumbItem>\r\n                        <BreadcrumbItem active>\r\n                            {props.dish.name}\r\n                        </BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                            <h3>{props.dish.name}</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-5 m-1\">\r\n                        <RenderDish dish={props.dish}/>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-5 m-1\">\r\n                        <div className=\"scrollbar\">\r\n                            <RenderComments comments= {props.comments}\r\n                            addComment={props.addComment}\r\n                            dishId={props.dish.id} />\r\n                        </div>    \r\n                        <CommentForm dishId={props.dish.id} addComment={props.addComment} />\r\n                    </div>\r\n\r\n                </div>\r\n            </div>     \r\n        );\r\n        }\r\n        else {\r\n            return (\r\n                <div></div>\r\n            );\r\n        }\r\n    }\r\n\r\nexport default DishDetail;","import React, {Component} from 'react';\r\nimport {Breadcrumb, BreadcrumbItem,Button,Row,Label,Col} from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport {Control, Form, Errors} from 'react-redux-form';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLengh = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLengh = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,9}$/i.test(val);\r\n \r\n    class Contact extends Component{\r\n       constructor(props){\r\n           super(props);\r\n           \r\n           this.handleSubmit = this.handleSubmit.bind(this);\r\n        }\r\n       \r\n       handleSubmit(values){\r\n        this.props.postFeedback(values);\r\n        this.props.resetFeedbackForm();\r\n       }\r\n      \r\n       render(){\r\n\r\n        return(\r\n        <div className=\"container\">\r\n            <Breadcrumb>\r\n                        <BreadcrumbItem>\r\n                            <Link to='/home'>Home</Link>\r\n                        </BreadcrumbItem>\r\n                        <BreadcrumbItem active>\r\n                                Contact Us\r\n                        </BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr></hr>\r\n                    </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                <h3>Location Information</h3>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                        121, Clear Water Bay Road<br />\r\n                        Clear Water Bay, Kowloon<br />\r\n                        HONG KONG<br />\r\n                        <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                        <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                        <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                        </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                    <h5>Map of our Location</h5>\r\n                </div>\r\n                <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                    <div className=\"btn-group\" role=\"group\">\r\n                        <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                        <a href=\"https://www.skype.com/en/\" role=\"button\" className=\"btn btn-info\" ><i className=\"fa fa-skype\" ></i> Skype</a>\r\n                        <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row.content\">\r\n                <div className=\"col-12\">\r\n                    <h3>Send Us Your Feedback</h3>\r\n                </div>\r\n                <div className=\"col-12 col-md-9\"> \r\n                    <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required,minLengh : minLengh(3),maxLengh: maxLengh(15)\r\n                                        }}\r\n                                        />\r\n                                        <Errors className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLengh: 'Must be greater than 2 characters',\r\n                                            maxLengh: 'Must be 15 characters or less'\r\n                                        }} \r\n                                        />\r\n                                        \r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required,minLengh : minLengh(3),maxLengh: maxLengh(15)\r\n                                        }}\r\n                                        />\r\n                                        <Errors className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLengh: 'Must be greater than 2 characters',\r\n                                            maxLengh: 'Must be 15 characters or less'\r\n                                        }} \r\n                                        />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required,minLengh : minLengh(5),maxLengh: maxLengh(10),isNumber\r\n                                        }}\r\n                                        />\r\n                                        <Errors className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLengh: 'Must be greater than 5 digits',\r\n                                            maxLengh: 'Must be 10 digits or less',\r\n                                            isNumber: 'Must be a Number'\r\n                                        }} \r\n                                        />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\" \r\n                                        validators={{\r\n                                            required,validEmail\r\n                                        }}\r\n                                        />\r\n                                        <Errors className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: \"Invalid Email address\"    \r\n                                        }} \r\n                                        />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                                 /> {' '}\r\n                                                <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                    Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n    }\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nfunction Footer (props){\r\n    return(\r\n        <>\r\n        <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li><Link to=\"/home\">Home</Link></li>\r\n                        <li><Link to=\"/aboutus\">About</Link></li>\r\n                        <li><Link to=\"/menu\">Menu</Link></li>\r\n                        <li><Link to=\"/contactus\">Contact Us</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n\t\t              121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                         confusion@food.net</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    \r\n        </>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport {baseUrl} from '../shared/baseUrl';\r\nimport { Fade, Stagger} from 'react-animation-components';\r\nimport {Loading} from './LoadingComponent';\r\n\r\n\r\nfunction RenderLeader ({leader , isLoading, errMess}){\r\n    if(isLoading){\r\n        return (\r\n            <Loading /> \r\n        );\r\n    }\r\n    else if(errMess){\r\n        return (\r\n            <h4>{errMess}</h4>\r\n        );\r\n    }\r\n    else\r\n    return (\r\n        <div key={leader.id} className=\"col-12 mt-5\">\r\n            <Stagger in>\r\n                <Fade in>\r\n                    <Media tag='li'>\r\n                    \r\n                        <Media left middle  >\r\n                            <Media object src={baseUrl + leader.image} alt={leader.name} />\r\n                        </Media>\r\n                        <Media body className=\"ml-5\" >\r\n                            <Media heading>\r\n                                {leader.name}\r\n                            </Media>\r\n                                <p>{leader.designation}</p>\r\n                                <p> {leader.description}</p>\r\n                        </Media>\r\n                    </Media>\r\n            </Fade>\r\n            </Stagger>\r\n        </div>\r\n        );\r\n   \r\n}\r\n\r\n\r\nfunction About(props) {\r\n\r\n    const leaders = props.leaders.leaders.map((leader) => {\r\n        return (\r\n            <RenderLeader leader={leader} isLoading={props.leaders.isLoading} errMess={props.leaders.leadersErrMess}></RenderLeader>\r\n        );\r\n    });\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>About Us</h3>\r\n                    <hr />\r\n                </div>                \r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                    P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n                \r\n                    <Media list>\r\n                        {leaders}\r\n                    </Media>\r\n               \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;    ","import * as ActionTypes from './ActionTypes';\r\nimport {baseUrl} from '../shared/baseUrl';\r\n\r\n\r\n//this will create an action object and return it () in arrow functions returns\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT, \r\n    payload: comment\r\n});\r\n//this object will be sent as action to comments.js as args to reducer functions\r\n\r\nexport const postComment =(dishId,rating, author, comment) => (dispatch) =>{\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    }\r\n    newComment.date = new Date().toISOString();\r\n\r\n    return fetch(baseUrl + 'comments',{\r\n        method:'POST',\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n            'Content-Type': 'application/JSON'\r\n        },\r\n        credentials: 'same-origin'\r\n    })\r\n    .then(response=> {\r\n        if(response.ok){\r\n            return response;\r\n        }\r\n        else {\r\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n    })\r\n    .then(response => response.json())\r\n    .then(dishes => dispatch(addComment(dishes)))\r\n    .catch(error=> {console.log('Post Comments '+ error.message)});\r\n}\r\n\r\n\r\n//this is a thunk that return a function which call/dispatch several actions\r\nexport const fetchDishes = () => (dispatch) => {\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n        .then(response=> {\r\n            if(response.ok){\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                var errmess = new Error(error.message);\r\n                throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(dishes => dispatch(addDishes(dishes)))\r\n        .catch(error=> dispatch(dishesFailed(error.message)));\r\n}\r\n\r\n//Actions\r\nexport const dishesLoading = () => ({\r\n    type : ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload : errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\nexport const fetchComments = () => (dispatch) => {\r\n\r\n    return fetch(baseUrl + 'comments')\r\n        .then(response=> {\r\n            if(response.ok){\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                var errmess = new Error(error.message);\r\n                throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(comments => dispatch(addComments(comments)))\r\n        .catch(error => dispatch(commentsFailed(error.message)));\r\n}\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload : errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\n//this is a thunk that return a function which call/dispatch several actions\r\nexport const fetchPromos = () => (dispatch) => {\r\n    dispatch(promosLoading(true));\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n        .then(response=> {\r\n            if(response.ok){\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(promos => dispatch(addPromos(promos)))\r\n        .catch(error=> dispatch(promosFailed(error.message)));\r\n    }\r\n\r\n//Actions\r\nexport const promosLoading = () => ({\r\n    type : ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload : errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n    dispatch(leadersLoading(true));\r\n\r\n    return fetch(baseUrl + 'leaders')\r\n        .then(response=> {\r\n            if(response.ok){\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(leaders => dispatch(addLeaders(leaders)))\r\n        .catch(error=> dispatch(leadersFailed(error.message)));\r\n    }\r\n\r\n//Actions\r\nexport const leadersLoading = () => ({\r\n    type : ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload : errmess\r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: leaders\r\n});\r\n\r\n\r\nexport const postFeedback = (feedback) => (dispatch) => {\r\n    const newFeedback = Object.assign({ date: new Date().toISOString() }, feedback);\r\n\r\n    return fetch(baseUrl + 'feedback', {\r\n        method: 'POST',\r\n        body: JSON.stringify(newFeedback),\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        credentials: 'same-origin'\r\n    })\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                var errorMessage = new Error(error.errorMessage);\r\n                throw errorMessage;\r\n            }\r\n        )\r\n        .then(response => response.json())\r\n        .then(response => { dispatch(addComment(response))\r\n            alert(\"Thank you for your feedback!\" + JSON.stringify(response))})\r\n        .catch(error => {\r\n            console.log('Post feedback: ' + error.message);\r\n            alert('Feedback could not be posted:\\n' + error.message)\r\n        })\r\n};","export const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED ='DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\nexport const ADD_COMMENTS= 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';","import React, { Component } from 'react';\r\nimport Menu from './MenuComponent';\r\nimport Home from \"./HomeComponent\";\r\nimport Header from './HeaderComponent';\r\nimport DishDetail from './DishdetailComponent';\r\nimport Contact from './ContactComponent';\r\nimport Footer from './FooterComponent';\r\nimport About from './AboutComponent';\r\nimport { Switch, Route, Redirect, withRouter } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\nimport {postComment, postFeedback, fetchDishes, fetchComments, fetchPromos, fetchLeaders } from '../redux/ActionCreators';\r\nimport {actions} from 'react-redux-form';\r\nimport {TransitionGroup,CSSTransition} from 'react-transition-group';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    dishes : state.dishes,\r\n    comments: state.comments,\r\n    promotions : state.promotions,\r\n    leaders : state.leaders \r\n  }\r\n}\r\n\r\n//here addcomment with four args will be passed to action creator and an action obj will be returned\r\n//which is passed to the dispatch function as arguement\r\n//states are updated via dispatch(action obj)\r\n//now we can use addComment anywhere in our component\r\nconst mapDispatchToProps= (dispatch) => ({\r\n  addComment : (dishId , rating, author,comment) => dispatch(postComment(dishId , rating, author,comment)),\r\n  postFeedback: (feedback) => dispatch(postFeedback(feedback)),\r\n  fetchDishes : () => {dispatch(fetchDishes())},\r\n  fetchComments : () => {dispatch(fetchComments())},\r\n  fetchPromos : () => {dispatch(fetchPromos())},\r\n  fetchLeaders : () => {dispatch(fetchLeaders())},\r\n  resetFeedbackForm : () => {dispatch(actions.reset('feedback'))}\r\n})\r\n\r\nclass Main extends Component {\r\n\r\n    componentDidMount() {\r\n      this.props.fetchDishes();\r\n      this.props.fetchComments();\r\n      this.props.fetchPromos();\r\n      this.props.fetchLeaders();\r\n    }\r\n    render() {\r\n\r\n      const HomePage = ()=> {\r\n        return(\r\n          <Home \r\n              dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n              dishesLoading= {this.props.dishes.isLoading}\r\n              dishesErrMess= {this.props.dishes.errMess}\r\n              promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n              promosLoading= {this.props.promotions.isLoading}\r\n              promosErrMess= {this.props.promotions.errMess}\r\n              leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\r\n              leadersLoading= {this.props.leaders.isLoading}\r\n              leadersErrMess= {this.props.leaders.errMess}\r\n          />\r\n        );\r\n      }\r\n  \r\n      const DishwithId = ({match}) => {\r\n        return(\r\n          <DishDetail dish={this.props.dishes.dishes.filter((dish)=> dish.id === parseInt(match.params.dishId , 10))[0]}\r\n            dishesLoading= {this.props.dishes.isLoading}\r\n            errMess= {this.props.dishes.errMess}        \r\n            comments={this.props.comments.comments.filter((comment)=> comment.dishId === parseInt(match.params.dishId , 10))}\r\n            commentsErrMess= {this.props.comments.errMess}\r\n            addComment={this.props.addComment}\r\n          />\r\n        );\r\n      }\r\n\r\n    return (\r\n    <div >\r\n      <Header />\r\n      <TransitionGroup>\r\n        <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n        <Switch>\r\n          <Route path=\"/home\" component={HomePage} />\r\n          <Route exact path=\"/menu\" component={()=> <Menu dishes={this.props.dishes}/>} /> \r\n          <Route path=\"/menu/:dishId\" component={DishwithId}/>\r\n          <Route exact path=\"/aboutus\" component={() => <About leaders ={this.props.leaders} \r\n            leadersLoading= {this.props.isLoading}\r\n            leadersErrMess= {this.props.errMess}  />}/>\r\n          <Route exact path=\"/contactus\" component={()=> <Contact resetFeedbackForm={this.props.resetFeedbackForm}\r\n          postFeedback={this.props.postFeedback} /> } />\r\n          <Redirect to=\"/home\" />\r\n        </Switch>\r\n        </CSSTransition>\r\n        </TransitionGroup>   \r\n      <Footer />\r\n    </div>\r\n  );\r\n  }\r\n}\r\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(Main));\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state= {\r\n        isLoading: true, \r\n        errMess : null,\r\n        dishes: []\r\n    },action ) => {\r\n    switch(action.type){\r\n    case ActionTypes.ADD_DISHES:\r\n        return{...state, isLoading:false , errMess:null , dishes: action.payload}; \r\n        //...state is sprint operator it is done so that the state is not mutated it\r\n        // makes a copy and then modifies it and then return\r\n        \r\n    case ActionTypes.DISHES_LOADING:\r\n        return{...state, isLoading:true , errMess:null , dishes: []};\r\n\r\n    case ActionTypes.DISHES_FAILED:\r\n        return{...state, isLoading:false , errMess:action.payload , dishes: []};\r\n\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state= {\r\n    errMess:null,\r\n    comments: []\r\n    },action ) => {\r\n    \r\n        switch(action.type){ //action.type means type property of action matches to the case\r\n            case ActionTypes.ADD_COMMENTS:\r\n                return{...state, isLoading:false , errMess:null , comments: action.payload}; \r\n            \r\n            case ActionTypes.COMMENTS_FAILED:\r\n                return{...state, isLoading:false , errMess:action.payload , comments: []};    \r\n            \r\n            case ActionTypes.ADD_COMMENT:\r\n                var comment = action.payload;\r\n                return {...state, comments: state.comments.concat(comment)};\r\n        default:\r\n            return state;\r\n    }\r\n} ","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state= {\r\n    isLoading: true, \r\n    errMess : null,\r\n    leaders: []\r\n    },action ) => {\r\n    switch(action.type){\r\n\r\n        case ActionTypes.ADD_LEADERS:\r\n            return{...state, isLoading:false , errMess:null , leaders: action.payload}; \r\n            \r\n        case ActionTypes.LEADERS_LOADING:\r\n            return{...state, isLoading:true , errMess:null , leaders: []};\r\n\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return{...state, isLoading:false , errMess:action.payload , leaders: []};\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state= {\r\n    isLoading: true, \r\n    errMess : null,\r\n    promotions: []\r\n    },action ) => {\r\n    switch(action.type){\r\n\r\n        case ActionTypes.ADD_PROMOS:\r\n            return{...state, isLoading:false , errMess:null , promotions: action.payload}; \r\n            \r\n        case ActionTypes.PROMOS_LOADING:\r\n            return{...state, isLoading:true , errMess:null , promotions: []};\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return{...state, isLoading:false , errMess:action.payload , promotions: []};\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree:false,\r\n    contactType:'Tel.',\r\n    message: ''\r\n}","import React, { Component } from 'react';\nimport Main from './components/MainComponent';\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport {ConfigureStore} from './redux/configureStore';\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n  render() {\n    return (\n     <Provider store = {store}> \n    <BrowserRouter>  \n      <div >\n        <Main />\n      </div>\n    </BrowserRouter>\n    </Provider>\n  );\n  }\n}\nexport default App;\n","import {createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport {createForms} from 'react-redux-form';\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Leaders } from './leaders';\r\nimport { Promotions } from './promotions';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { InitialFeedback } from './forms';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n       combineReducers({\r\n           dishes:Dishes,\r\n           comments: Comments,\r\n           leaders: Leaders,\r\n           promotions:Promotions,\r\n           ...createForms({\r\n               feedback: InitialFeedback\r\n           })\r\n       }),\r\n       applyMiddleware(thunk,logger)\r\n    );\r\n\r\n    return store;\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}